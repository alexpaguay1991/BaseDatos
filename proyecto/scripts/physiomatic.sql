CREATE USER C##PHYSIOMATIC IDENTIFIED BY Junior220799;
GRANT DBA TO C##PHYSIOMATIC;
CONNECT C##PHYSIOMATIC/Junior220799;

CREATE TABLE role (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role VARCHAR2(255) NOT NULL UNIQUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE genders (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR2(50) NOT NULL
);

CREATE TABLE appointment_states (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    state_name VARCHAR2(50) NOT NULL UNIQUE
);

CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    names VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) NOT NULL UNIQUE,
    role_id NUMBER NOT NULL,
    auth_id VARCHAR2(255) DEFAULT NULL, 
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES role(id)
);

CREATE TABLE patients (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    national_id VARCHAR2(255) NOT NULL UNIQUE,
    names VARCHAR2(255) NOT NULL,
    birth_date DATE NOT NULL,
    gender_id NUMBER NOT NULL,
    email VARCHAR2(255) UNIQUE,
    phone_number VARCHAR2(50),
    emergency_contact_name VARCHAR2(255),
    emergency_contact_phone VARCHAR2(50),
    address CLOB,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_gender_id FOREIGN KEY (gender_id) REFERENCES genders(id)
);

CREATE TABLE doctors (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    national_id VARCHAR2(255) NOT NULL UNIQUE,
    names VARCHAR2(255) NOT NULL,
    specialty VARCHAR2(255),
    phone_number VARCHAR2(50),
    email VARCHAR2(255) UNIQUE,
    role_id NUMBER NOT NULL,
    CONSTRAINT fk_doctors_role_id FOREIGN KEY (role_id) REFERENCES role(id)
);

CREATE TABLE medical_records (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id NUMBER NOT NULL,
    blood_type VARCHAR2(3),
    allergies CLOB, 
    medical_conditions CLOB, 
    is_active NUMBER(1) DEFAULT 1 NOT NULL, 
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_patient_id FOREIGN KEY (patient_id) REFERENCES patients(id) ON DELETE CASCADE
);

CREATE TABLE medical_entries (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    record_id NUMBER NOT NULL,
    doctor_id NUMBER,
    type VARCHAR2(50), -- 'diagn√≥stico', 'tratamiento', 'nota', etc.
    description CLOB, -- Adecuado para textos largos, equivalente a TEXT en PostgreSQL
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_record_id FOREIGN KEY (record_id) REFERENCES medical_records(id) ON DELETE CASCADE,
    CONSTRAINT fk_doctor_id FOREIGN KEY (doctor_id) REFERENCES doctors(id)
);

CREATE TABLE appointments (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    scheduler_id NUMBER,
    patient_id NUMBER NOT NULL,
    doctor_id NUMBER,
    appointment_date DATE NOT NULL,
    start_time DATE NOT NULL, 
    state_id NUMBER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT chk_start_time CHECK (TO_CHAR(start_time, 'HH24:MI:SS') BETWEEN '08:00:00' AND '17:00:00'),
    CONSTRAINT fk_appointments_scheduler_id FOREIGN KEY (scheduler_id) REFERENCES users(id) ON DELETE SET NULL,
    CONSTRAINT fk_appointments_patient_id FOREIGN KEY (patient_id) REFERENCES patients(id) ON DELETE CASCADE,
    CONSTRAINT fk_appointments_doctor_id FOREIGN KEY (doctor_id) REFERENCES doctors(id) ON DELETE SET NULL,
    CONSTRAINT fk_appointments_state_id FOREIGN KEY (state_id) REFERENCES appointment_states(id)
);

/* DROPS TABLES */
DROP TABLE medical_entries;
DROP TABLE appointments;
DROP TABLE medical_records;
DROP TABLE doctors;
DROP TABLE patients;
DROP TABLE users;
DROP TABLE appointment_states;
DROP TABLE genders;
DROP TABLE role;